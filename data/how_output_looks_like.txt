CHECKPOINT:Enter classes/DataWranglerClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Retrieve data from provided location
CHECKPOINT:Clean data
CHECKPOINT:Enter classes/DataWranglerClass.clean_data
CHECKPOINT:Exit classes/DataWranglerClass.clean_data
CHECKPOINT:One-hot encode data
CHECKPOINT:Enter classes/DataWranglerClass.one_hot_encoder
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:One-hot encode provided columns
CHECKPOINT:One-hot encode column "school"
CHECKPOINT:One-hot encode column "sex"
CHECKPOINT:One-hot encode column "address"
CHECKPOINT:One-hot encode column "famsize"
CHECKPOINT:One-hot encode column "Pstatus"
CHECKPOINT:One-hot encode column "Mjob"
CHECKPOINT:One-hot encode column "Fjob"
CHECKPOINT:One-hot encode column "reason"
CHECKPOINT:One-hot encode column "guardian"
CHECKPOINT:Exit classes/DataWranglerClass.one_hot_encoder
CHECKPOINT:Convert yn_tf columns to binary
CHECKPOINT:Enter classes/DataWranglerClass.convert_yn_tf_to_binary
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Encode column "schoolsup" in binary
CHECKPOINT:Encode column "famsup" in binary
CHECKPOINT:Encode column "paid" in binary
CHECKPOINT:Encode column "activities" in binary
CHECKPOINT:Encode column "nursery" in binary
CHECKPOINT:Encode column "higher" in binary
CHECKPOINT:Encode column "internet" in binary
CHECKPOINT:Encode column "romantic" in binary
CHECKPOINT:Exit classes/DataWranglerClass.convert_yn_tf_to_binary
CHECKPOINT:Exit classes/DataWranglerClass.constructor
CHECKPOINT:Enter classes/DataExplorerClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Instantiate Object
CHECKPOINT:Exit classes/DataExplorerClass.constructor
CHECKPOINT:Enter classes/DataExplorerClass.correlation_values_dataframe
VALUE: Pearson Correlation value between column "age" and "G3" is -0.16157943813834028
VALUE: Pearson Correlation value between column "Medu" and "G3" is 0.21714749613860598
VALUE: Pearson Correlation value between column "Fedu" and "G3" is 0.15245693890425888
VALUE: Pearson Correlation value between column "traveltime" and "G3" is -0.11714205281614914
VALUE: Pearson Correlation value between column "studytime" and "G3" is 0.09781968965319636
VALUE: Pearson Correlation value between column "failures" and "G3" is -0.360414940461649
VALUE: Pearson Correlation value between column "schoolsup" and "G3" is -0.0827882149931632
VALUE: Pearson Correlation value between column "famsup" and "G3" is -0.03915714523790466
VALUE: Pearson Correlation value between column "paid" and "G3" is 0.10199624071669916
VALUE: Pearson Correlation value between column "activities" and "G3" is 0.01609970129581438
VALUE: Pearson Correlation value between column "nursery" and "G3" is 0.051567900910917557
VALUE: Pearson Correlation value between column "higher" and "G3" is 0.1824646178581578
VALUE: Pearson Correlation value between column "internet" and "G3" is 0.0984833712607291
VALUE: Pearson Correlation value between column "romantic" and "G3" is -0.12996995016344987
VALUE: Pearson Correlation value between column "famrel" and "G3" is 0.05136342888128217
VALUE: Pearson Correlation value between column "freetime" and "G3" is 0.011307240308313036
VALUE: Pearson Correlation value between column "goout" and "G3" is -0.13279147350332918
VALUE: Pearson Correlation value between column "Dalc" and "G3" is -0.05466004056673595
VALUE: Pearson Correlation value between column "Walc" and "G3" is -0.0519393237422462
VALUE: Pearson Correlation value between column "health" and "G3" is -0.06133460487712132
VALUE: Pearson Correlation value between column "absences" and "G3" is 0.03424731615006934
VALUE: Pearson Correlation value between column "G1" and "G3" is 0.8014679320174141
VALUE: Pearson Correlation value between column "G2" and "G3" is 0.9048679892693013
VALUE: Pearson Correlation value between column "school_is_GP" and "G3" is 0.045016943113306764
VALUE: Pearson Correlation value between column "school_is_MS" and "G3" is -0.04501694311330681
VALUE: Pearson Correlation value between column "sex_is_F" and "G3" is -0.10345564746639299
VALUE: Pearson Correlation value between column "sex_is_M" and "G3" is 0.10345564746639298
VALUE: Pearson Correlation value between column "address_is_R" and "G3" is -0.10575606393084079
VALUE: Pearson Correlation value between column "address_is_U" and "G3" is 0.1057560639308408
VALUE: Pearson Correlation value between column "famsize_is_GT3" and "G3" is -0.08140710977255432
VALUE: Pearson Correlation value between column "famsize_is_LE3" and "G3" is 0.08140710977255432
VALUE: Pearson Correlation value between column "Pstatus_is_A" and "G3" is 0.05800898495931129
VALUE: Pearson Correlation value between column "Pstatus_is_T" and "G3" is -0.05800898495931129
VALUE: Pearson Correlation value between column "Mjob_is_at_home" and "G3" is -0.11563430024031005
VALUE: Pearson Correlation value between column "Mjob_is_health" and "G3" is 0.11615798500405058
VALUE: Pearson Correlation value between column "Mjob_is_other" and "G3" is -0.09647736980457639
VALUE: Pearson Correlation value between column "Mjob_is_services" and "G3" is 0.07842886563054383
VALUE: Pearson Correlation value between column "Mjob_is_teacher" and "G3" is 0.0577123845876005
VALUE: Pearson Correlation value between column "Fjob_is_at_home" and "G3" is -0.013384571933222712
VALUE: Pearson Correlation value between column "Fjob_is_health" and "G3" is 0.05711054990468323
VALUE: Pearson Correlation value between column "Fjob_is_other" and "G3" is -0.05348341203044543
VALUE: Pearson Correlation value between column "Fjob_is_services" and "G3" is -0.016107827246739204
VALUE: Pearson Correlation value between column "Fjob_is_teacher" and "G3" is 0.09537401288733663
VALUE: Pearson Correlation value between column "reason_is_course" and "G3" is -0.09894963607968164
VALUE: Pearson Correlation value between column "reason_is_home" and "G3" is -0.021359171689741253
VALUE: Pearson Correlation value between column "reason_is_other" and "G3" is 0.05200771650145238
VALUE: Pearson Correlation value between column "reason_is_reputation" and "G3" is 0.09569223043998638
VALUE: Pearson Correlation value between column "guardian_is_father" and "G3" is 0.03249322039994662
VALUE: Pearson Correlation value between column "guardian_is_mother" and "G3" is 0.022337752197958343
VALUE: Pearson Correlation value between column "guardian_is_other" and "G3" is -0.08777444691256617
CHECKPOINT:Exit classes/DataExplorerClass.correlation_values_dataframe
VALUE:   target_column_name       age  ...  guardian_is_mother  guardian_is_other
0                 G3 -0.161579  ...            0.022338          -0.087774

[1 rows x 51 columns]
CHECKPOINT:Enter classes/DataExplorerClass.trim_columns_with_correlation_less_than
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Enter classes/DataExplorerClass.correlation_values_dataframe
VALUE: Pearson Correlation value between column "age" and "G3" is -0.16157943813834028
VALUE: Pearson Correlation value between column "Medu" and "G3" is 0.21714749613860598
VALUE: Pearson Correlation value between column "Fedu" and "G3" is 0.15245693890425888
VALUE: Pearson Correlation value between column "traveltime" and "G3" is -0.11714205281614914
VALUE: Pearson Correlation value between column "studytime" and "G3" is 0.09781968965319636
VALUE: Pearson Correlation value between column "failures" and "G3" is -0.360414940461649
VALUE: Pearson Correlation value between column "schoolsup" and "G3" is -0.0827882149931632
VALUE: Pearson Correlation value between column "famsup" and "G3" is -0.03915714523790466
VALUE: Pearson Correlation value between column "paid" and "G3" is 0.10199624071669916
VALUE: Pearson Correlation value between column "activities" and "G3" is 0.01609970129581438
VALUE: Pearson Correlation value between column "nursery" and "G3" is 0.051567900910917557
VALUE: Pearson Correlation value between column "higher" and "G3" is 0.1824646178581578
VALUE: Pearson Correlation value between column "internet" and "G3" is 0.0984833712607291
VALUE: Pearson Correlation value between column "romantic" and "G3" is -0.12996995016344987
VALUE: Pearson Correlation value between column "famrel" and "G3" is 0.05136342888128217
VALUE: Pearson Correlation value between column "freetime" and "G3" is 0.011307240308313036
VALUE: Pearson Correlation value between column "goout" and "G3" is -0.13279147350332918
VALUE: Pearson Correlation value between column "Dalc" and "G3" is -0.05466004056673595
VALUE: Pearson Correlation value between column "Walc" and "G3" is -0.0519393237422462
VALUE: Pearson Correlation value between column "health" and "G3" is -0.06133460487712132
VALUE: Pearson Correlation value between column "absences" and "G3" is 0.03424731615006934
VALUE: Pearson Correlation value between column "G1" and "G3" is 0.8014679320174141
VALUE: Pearson Correlation value between column "G2" and "G3" is 0.9048679892693013
VALUE: Pearson Correlation value between column "school_is_GP" and "G3" is 0.045016943113306764
VALUE: Pearson Correlation value between column "school_is_MS" and "G3" is -0.04501694311330681
VALUE: Pearson Correlation value between column "sex_is_F" and "G3" is -0.10345564746639299
VALUE: Pearson Correlation value between column "sex_is_M" and "G3" is 0.10345564746639298
VALUE: Pearson Correlation value between column "address_is_R" and "G3" is -0.10575606393084079
VALUE: Pearson Correlation value between column "address_is_U" and "G3" is 0.1057560639308408
VALUE: Pearson Correlation value between column "famsize_is_GT3" and "G3" is -0.08140710977255432
VALUE: Pearson Correlation value between column "famsize_is_LE3" and "G3" is 0.08140710977255432
VALUE: Pearson Correlation value between column "Pstatus_is_A" and "G3" is 0.05800898495931129
VALUE: Pearson Correlation value between column "Pstatus_is_T" and "G3" is -0.05800898495931129
VALUE: Pearson Correlation value between column "Mjob_is_at_home" and "G3" is -0.11563430024031005
VALUE: Pearson Correlation value between column "Mjob_is_health" and "G3" is 0.11615798500405058
VALUE: Pearson Correlation value between column "Mjob_is_other" and "G3" is -0.09647736980457639
VALUE: Pearson Correlation value between column "Mjob_is_services" and "G3" is 0.07842886563054383
VALUE: Pearson Correlation value between column "Mjob_is_teacher" and "G3" is 0.0577123845876005
VALUE: Pearson Correlation value between column "Fjob_is_at_home" and "G3" is -0.013384571933222712
VALUE: Pearson Correlation value between column "Fjob_is_health" and "G3" is 0.05711054990468323
VALUE: Pearson Correlation value between column "Fjob_is_other" and "G3" is -0.05348341203044543
VALUE: Pearson Correlation value between column "Fjob_is_services" and "G3" is -0.016107827246739204
VALUE: Pearson Correlation value between column "Fjob_is_teacher" and "G3" is 0.09537401288733663
VALUE: Pearson Correlation value between column "reason_is_course" and "G3" is -0.09894963607968164
VALUE: Pearson Correlation value between column "reason_is_home" and "G3" is -0.021359171689741253
VALUE: Pearson Correlation value between column "reason_is_other" and "G3" is 0.05200771650145238
VALUE: Pearson Correlation value between column "reason_is_reputation" and "G3" is 0.09569223043998638
VALUE: Pearson Correlation value between column "guardian_is_father" and "G3" is 0.03249322039994662
VALUE: Pearson Correlation value between column "guardian_is_mother" and "G3" is 0.022337752197958343
VALUE: Pearson Correlation value between column "guardian_is_other" and "G3" is -0.08777444691256617
CHECKPOINT:Exit classes/DataExplorerClass.correlation_values_dataframe
CHECKPOINT:Trim column: studytime
CHECKPOINT:Trim column: schoolsup
CHECKPOINT:Trim column: famsup
CHECKPOINT:Trim column: activities
CHECKPOINT:Trim column: nursery
CHECKPOINT:Trim column: internet
CHECKPOINT:Trim column: famrel
CHECKPOINT:Trim column: freetime
CHECKPOINT:Trim column: Dalc
CHECKPOINT:Trim column: Walc
CHECKPOINT:Trim column: health
CHECKPOINT:Trim column: absences
CHECKPOINT:Trim column: school_is_GP
CHECKPOINT:Trim column: school_is_MS
CHECKPOINT:Trim column: famsize_is_GT3
CHECKPOINT:Trim column: famsize_is_LE3
CHECKPOINT:Trim column: Pstatus_is_A
CHECKPOINT:Trim column: Pstatus_is_T
CHECKPOINT:Trim column: Mjob_is_other
CHECKPOINT:Trim column: Mjob_is_services
CHECKPOINT:Trim column: Mjob_is_teacher
CHECKPOINT:Trim column: Fjob_is_at_home
CHECKPOINT:Trim column: Fjob_is_health
CHECKPOINT:Trim column: Fjob_is_other
CHECKPOINT:Trim column: Fjob_is_services
CHECKPOINT:Trim column: Fjob_is_teacher
CHECKPOINT:Trim column: reason_is_course
CHECKPOINT:Trim column: reason_is_home
CHECKPOINT:Trim column: reason_is_other
CHECKPOINT:Trim column: reason_is_reputation
CHECKPOINT:Trim column: guardian_is_father
CHECKPOINT:Trim column: guardian_is_mother
CHECKPOINT:Trim column: guardian_is_other
CHECKPOINT:Exit classes/DataExplorerClass.trim_columns_with_correlation_less_than
VALUE:      age  Medu  Fedu  ...  address_is_U  Mjob_is_at_home  Mjob_is_health
0     18     4     4  ...             1                1               0
1     17     1     1  ...             1                1               0
2     15     1     1  ...             1                1               0
3     15     4     2  ...             1                0               1
4     16     3     3  ...             1                0               0
..   ...   ...   ...  ...           ...              ...             ...
390   20     2     2  ...             1                0               0
391   17     3     1  ...             1                0               0
392   21     1     1  ...             0                0               0
393   18     3     2  ...             0                0               0
394   19     1     1  ...             1                0               0

[395 rows x 18 columns]
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
VALUE: Balance for split -> 0.9654008438818567
CHECKPOINT:Enter classes/DataClassifierClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Initialise training and testing dataset
CHECKPOINT:Remove ['G1', 'G2'] columns from a copy of the provided dataset
CHECKPOINT:Exit classes/DataClassifierClass.constructor
CHECKPOINT:Enter classes/DataClassifierClass.evaluate_using_model
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Segregate labels/features/attributes from target label/feature/attribute
CHECKPOINT:Select SVC as a classifier
CHECKPOINT:Train the model over training data
DISABLED
CHECKPOINT:Test the model over testing data
CHECKPOINT:Append the predicted values of target column "G3" as "G3_predicted" to the dataframe
CHECKPOINT:Calculate metrics: accuract, precision, recall
CHECKPOINT:Generate confusion matrices for multi-class classification
CHECKPOINT:Exit classes/DataClassifierClass.evaluate_using_model
VALUE:      age  Medu  Fedu  ...  guardian_is_other  G3  G3_predicted
101   16     4     4  ...                  0  17             0
303   17     3     2  ...                  0  18             0
374   18     4     4  ...                  0  19             0
221   17     1     1  ...                  0   0             0
286   18     2     2  ...                  0  19            10
..   ...   ...   ...  ...                ...  ..           ...
29    16     4     4  ...                  0  11            13
249   16     0     2  ...                  0  15             0
245   16     2     1  ...                  0  18            10
136   17     3     4  ...                  0   0             0
272   18     1     1  ...                  0  11            10

[99 rows x 50 columns]
VALUE: {'accuracy': 0.16161616161616163, 'precision': 0.03462078462078462, 'recall': 0.09819004524886878}
VALUE: [[[62 28]
  [ 0  9]]

 [[95  0]
  [ 4  0]]

 [[95  0]
  [ 4  0]]

 [[88  3]
  [ 8  0]]

 [[93  0]
  [ 6  0]]

 [[52 30]
  [12  5]]

 [[76 10]
  [12  1]]

 [[91  0]
  [ 8  0]]

 [[82 12]
  [ 4  1]]

 [[94  0]
  [ 5  0]]

 [[91  0]
  [ 8  0]]

 [[97  0]
  [ 2  0]]

 [[97  0]
  [ 2  0]]

 [[94  0]
  [ 5  0]]

 [[97  0]
  [ 2  0]]

 [[98  0]
  [ 1  0]]]
[[7 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 1 0 0 0 0]
 [1 0 0 0 0 2 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 2 0 0 1 0 0 0 0 0 0]
 [3 0 0 0 0 3 0 0 2 0 0 0 0]
 [3 0 0 1 0 4 0 0 2 0 0 0 0]
 [0 0 0 0 0 2 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 3 0 0 0 0 0 0 0]
 [4 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0]]
******************************************
[[2 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 1 0 2 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 2 0 0 0 0 0 0]
 [4 0 0 0 2 2 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 1 0 0 0 0 0 0]
 [3 0 0 0 3 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [2 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 2 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [2 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
******************************************
{'statistical_parity': 1.3835616438356164, 'equalized_odds': 0.26455325381879047, 'equal_opportunity': 0.05185185185185184, 'predictive_equality': 0.21270140196693865, 'conditional_use_accuracy_equality': 0.26455325381879047, 'predictive_parity': 0.05185185185185184, 'overall_accuracy_equality': 2.190766108574328}
CHECKPOINT:Enter classes/DataExplorerClass.constructor
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Instantiate Object
CHECKPOINT:Exit classes/DataExplorerClass.constructor
CHECKPOINT:Enter classes/DataExplorerClass.trim_columns_with_correlation_less_than
CHECKPOINT:Perform parameter pre-checks
CHECKPOINT:Complete parameter pre-checks
CHECKPOINT:Enter classes/DataExplorerClass.correlation_values_dataframe
VALUE: Pearson Correlation value between column "accuracy" and "balance_for_split" is 1.0
VALUE: Pearson Correlation value between column "precision" and "balance_for_split" is 1.0
VALUE: Pearson Correlation value between column "recall" and "balance_for_split" is 1.0
VALUE: Pearson Correlation value between column "statistical_parity" and "balance_for_split" is 1.0
VALUE: Pearson Correlation value between column "equalized_odds" and "balance_for_split" is 1.0
VALUE: Pearson Correlation value between column "equal_opportunity" and "balance_for_split" is nan
VALUE: Pearson Correlation value between column "predictive_equality" and "balance_for_split" is nan
VALUE: Pearson Correlation value between column "conditional_use_accuracy_equality" and "balance_for_split" is 1.0
VALUE: Pearson Correlation value between column "predictive_parity" and "balance_for_split" is nan
VALUE: Pearson Correlation value between column "overall_accuracy_equality" and "balance_for_split" is -1.0
CHECKPOINT:Exit classes/DataExplorerClass.correlation_values_dataframe
CHECKPOINT:Exit classes/DataExplorerClass.trim_columns_with_correlation_less_than
